name: WindowsRelease

on: [push]

permissions:  # set top-level default permissions as security best practice
  contents: read

jobs:
  build:
    if: github.event_name != 'pull_request' || startsWith( github.base_ref, 'rel-') || contains( github.event.pull_request.labels.*.name, 'run release CIs')
    runs-on: win-machine
    strategy:
      matrix:
        python-version: ['3.9']
        architecture: ['x86']
        win-machine: [windows-latest, windows-2019]
    steps:
    - name: Checkout ONNX
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
         path: ./onnx
    - name: Checkout ONNX submodules
      shell: bash
      run: |
         cd onnx
         auth_header="$(git config --local --get http.https://github.com/.extraheader)"
         git submodule sync --recursive
         git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c # v1.3.1
      with:
        msbuild-architecture: ${{ matrix.architecture }}

    - name: Install Python dependencies
      run: |
        python -m pip install -q --upgrade pip
        cd onnx
        pip install . "[reference]" -vvv
        pytest .